Name: KEYWORD_program                Value: program
Name: IDENTIFIER                     Value: leimprime
Name: SEPARATOR_semicolon            Value: ;
Name: IDENTIFIER                     Value: var
Name: IDENTIFIER                     Value: a
Name: SEPARATOR_colon                Value: :
Name: KEYWORD_real                   Value: real
Name: SEPARATOR_semicolon            Value: ;
Name: IDENTIFIER                     Value: var
Name: IDENTIFIER                     Value: b
Name: SEPARATOR_colon                Value: :
Name: KEYWORD_integer                Value: integer
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_procedure              Value: procedure
Name: IDENTIFIER                     Value: nomep
Name: SEPARATOR_open-parenthesis     Value: (
Name: IDENTIFIER                     Value: x
Name: SEPARATOR_colon                Value: :
Name: KEYWORD_real                   Value: real
Name: SEPARATOR_close-parenthesis    Value: )
Name: SEPARATOR_semicolon            Value: ;
Name: IDENTIFIER                     Value: var
Name: IDENTIFIER                     Value: a
Name: SEPARATOR_comma                Value: ,
Name: IDENTIFIER                     Value: c
Name: SEPARATOR_colon                Value: :
Name: KEYWORD_integer                Value: integer
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_begin                  Value: begin
Name: KEYWORD_read                   Value: read
Name: SEPARATOR_open-parenthesis     Value: (
Name: IDENTIFIER                     Value: c
Name: SEPARATOR_comma                Value: ,
Name: IDENTIFIER                     Value: a
Name: SEPARATOR_close-parenthesis    Value: )
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_if                     Value: if
Name: IDENTIFIER                     Value: a
Name: OPERATOR_less-than             Value: <
Name: IDENTIFIER                     Value: x
Name: OPERATOR_addition              Value: +
Name: IDENTIFIER                     Value: c
Name: KEYWORD_then                   Value: then
Name: KEYWORD_begin                  Value: begin
Name: IDENTIFIER                     Value: a
Name: OPERATOR_assigment             Value: :=
Name: IDENTIFIER                     Value: c
Name: OPERATOR_addition              Value: +
Name: IDENTIFIER                     Value: x
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_write                  Value: write
Name: SEPARATOR_open-parenthesis     Value: (
(At line 12) => ERROR: Invalid character '$'
Name: SEPARATOR_close-parenthesis    Value: )
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_end                    Value: end
Name: KEYWORD_else                   Value: else
Name: IDENTIFIER                     Value: c
Name: OPERATOR_assigment             Value: :=
Name: IDENTIFIER                     Value: a
Name: OPERATOR_addition              Value: +
Name: IDENTIFIER                     Value: x
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_end                    Value: end
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_begin                  Value: begin
Name: KEYWORD_read                   Value: read
Name: SEPARATOR_open-parenthesis     Value: (
Name: IDENTIFIER                     Value: b
Name: SEPARATOR_close-parenthesis    Value: )
Name: SEPARATOR_semicolon            Value: ;
Name: IDENTIFIER                     Value: nomep
Name: SEPARATOR_open-parenthesis     Value: (
Name: IDENTIFIER                     Value: b
Name: SEPARATOR_close-parenthesis    Value: )
Name: SEPARATOR_semicolon            Value: ;
Name: KEYWORD_end                    Value: end
Name: SEPARATOR_dot                  Value: .
